package Sem3;

public class Towers {

    /*Ну допустим, я поняла, что это за игра, и как в неё играть, но это ещу не значит, что я понимаю задачу
     * Написать программу, показывающую последовательность действий для игры “Ханойская башня”
     */
    // Это должен быть метод, который принимает на вход количество дисков
    public static void game(int n, char a, char b, char c) {
        // Количество столбиков не меняется
        // char a = 'A';
        // char b = 'B';
        // char c = 'C'; Поняла в чём секрет, меняется их порядок
        
        // Если диск только один
        if (n == 1){
            move(a, c);
        }
        // else if (n == 2){ 
        //     move(a, b);
        //     move(a, c);
        //     move(b, c);
        // }
        /*Кажется эту историю можно распространить на чётное и нечётное количество дисков
        * Если чётное, то первым ходом а=>b а если нечетное, то a=>c
        имеющиеся решения добиваются этого переставляя переменные местами
        */
        else {
            game(n-1, a, c, b);
            move(a, c);
            game(n-1, b, a, c);
}
        // return ; А оно же ничего не возвращает, просто печатает
        // Ну я хотя бы поняла, как тут работает рекурсия, уже достижение

    }

    // public static void move(int n, char from , char to){ /* Украдено с хабра. А впрочем, зачем тут n? */
    //     System.out.println("move: "+ n + " from " + from + " to " + to);
    // }
    public static void move(char from , char to){ 
        System.out.println("Переместить с " + from + " на " + to);
    }
    
    public static void main(String[] args){
        game(5,'А','B','C');
    }

}
